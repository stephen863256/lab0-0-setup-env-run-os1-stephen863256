
.container_job:
  image: docker:stable
  stage: containers
  needs: []
  services:
    - name: registry.gitlab.com/libvirt/libvirt-ci/docker-dind:master
      alias: docker
  before_script:
    - export TAG="$CI_REGISTRY_IMAGE/ci-$NAME:latest"
    - export COMMON_TAG="$CI_REGISTRY/test-group/test-minimal/ci-$NAME:latest"
    - docker info
    - docker login registry.gitlab.com -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker pull "$TAG" || docker pull "$COMMON_TAG" || true
    - docker build --cache-from "$TAG" --cache-from "$COMMON_TAG" --tag "$TAG" -f "ci/containers/$NAME.Dockerfile" ci/containers
    - docker push "$TAG"
  after_script:
    - docker logout


.gitlab_native_build_job:
  image: $CI_REGISTRY_IMAGE/ci-$NAME:latest
  stage: builds


.gitlab_cross_build_job:
  image: $CI_REGISTRY_IMAGE/ci-$NAME-cross-$CROSS:latest
  stage: builds


.cirrus_build_job:
  stage: builds
  image: registry.gitlab.com/libvirt/libvirt-ci/cirrus-run:master
  needs: []
  script:
    - source ci/cirrus/$NAME.vars
    - sed -e "s|[@]CI_REPOSITORY_URL@|$CI_REPOSITORY_URL|g"
          -e "s|[@]CI_COMMIT_REF_NAME@|$CI_COMMIT_REF_NAME|g"
          -e "s|[@]CI_COMMIT_SHA@|$CI_COMMIT_SHA|g"
          -e "s|[@]CIRRUS_VM_INSTANCE_TYPE@|$CIRRUS_VM_INSTANCE_TYPE|g"
          -e "s|[@]CIRRUS_VM_IMAGE_SELECTOR@|$CIRRUS_VM_IMAGE_SELECTOR|g"
          -e "s|[@]CIRRUS_VM_IMAGE_NAME@|$CIRRUS_VM_IMAGE_NAME|g"
          -e "s|[@]UPDATE_COMMAND@|$UPDATE_COMMAND|g"
          -e "s|[@]UPGRADE_COMMAND@|$UPGRADE_COMMAND|g"
          -e "s|[@]INSTALL_COMMAND@|$INSTALL_COMMAND|g"
          -e "s|[@]PATH@|$PATH_EXTRA${PATH_EXTRA:+:}\$PATH|g"
          -e "s|[@]PKG_CONFIG_PATH@|$PKG_CONFIG_PATH|g"
          -e "s|[@]PKGS@|$PKGS|g"
          -e "s|[@]MAKE@|$MAKE|g"
          -e "s|[@]PYTHON@|$PYTHON|g"
          -e "s|[@]PIP3@|$PIP3|g"
          -e "s|[@]PYPI_PKGS@|$PYPI_PKGS|g"
          -e "s|[@]XML_CATALOG_FILES@|$XML_CATALOG_FILES|g"
      <ci/cirrus/build.yml >ci/cirrus/$NAME.yml
    - cat ci/cirrus/$NAME.yml
    - cirrus-run -v --show-build-log always ci/cirrus/$NAME.yml
  rules:
    - if: "$CIRRUS_GITHUB_REPO && $CIRRUS_API_TOKEN"


check-dco:
  stage: sanity_checks
  needs: []
  image: registry.gitlab.com/libvirt/libvirt-ci/check-dco:master
  script:
    - /check-dco test-group
  except:
    variables:
      - $CI_PROJECT_NAMESPACE == 'test-group'
  variables:
    GIT_DEPTH: 1000


# Native container jobs

x86_64-centos-stream-9-container:
  extends: .container_job
  allow_failure: false
  variables:
    NAME: centos-stream-9


x86_64-fedora-rawhide-container:
  extends: .container_job
  allow_failure: false
  variables:
    NAME: fedora-rawhide



# Cross container jobs

i686-debian-sid-container:
  extends: .container_job
  allow_failure: false
  variables:
    NAME: debian-sid-cross-i686


ppc64le-debian-sid-container:
  extends: .container_job
  allow_failure: true
  variables:
    NAME: debian-sid-cross-ppc64le


mingw32-fedora-rawhide-container:
  extends: .container_job
  allow_failure: false
  variables:
    NAME: fedora-rawhide-cross-mingw32


# Native build jobs

x86_64-centos-stream-9:
  extends: .native_build_job
  needs:
    - x86_64-centos-stream-9-container
  allow_failure: false
  variables:
    NAME: centos-stream-9


x86_64-fedora-rawhide-clang:
  extends: .native_build_job
  needs:
    - x86_64-fedora-rawhide-container
  allow_failure: false
  variables:
    CC: clang
    NAME: fedora-rawhide



# Cross build jobs

i686-debian-sid:
  extends: .cross_build_job
  needs:
    - i686-debian-sid-container
  allow_failure: false
  variables:
    CROSS: i686
    NAME: debian-sid
  artifacts:
    expire_in: 2 days
    paths:
      - build
      - scratch

mingw32-fedora-rawhide:
  extends: .cross_build_job
  needs:
    - mingw32-fedora-rawhide-container
  allow_failure: false
  variables:
    CROSS: mingw32
    NAME: fedora-rawhide


# Native cirrus build jobs

x86_64-freebsd-current:
  extends: .cirrus_build_job
  needs: []
  allow_failure: false
  variables:
    CIRRUS_VM_IMAGE_NAME: freebsd-13-0-snap
    CIRRUS_VM_IMAGE_SELECTOR: image_family
    CIRRUS_VM_INSTANCE_TYPE: freebsd_instance
    INSTALL_COMMAND: pkg install -y
    NAME: freebsd-current
    UPDATE_COMMAND: pkg update
    UPGRADE_COMMAND: pkg upgrade -y


x86_64-macos-11:
  extends: .cirrus_build_job
  needs: []
  allow_failure: false
  variables:
    CIRRUS_VM_IMAGE_NAME: big-sur-base
    CIRRUS_VM_IMAGE_SELECTOR: image
    CIRRUS_VM_INSTANCE_TYPE: osx_instance
    INSTALL_COMMAND: brew install
    NAME: macos-11
    UPDATE_COMMAND: brew update
    UPGRADE_COMMAND: brew upgrade
