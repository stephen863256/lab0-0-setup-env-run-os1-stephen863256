var searchIndex = JSON.parse('{\
"os":{"doc":"The main module and entrypoint","t":"AFAAAOOFAAAARDRDHRDRHRDMMLLLLLLLLMMMLLLLLLLLFLLLLLLMFLLFLLLLLLLLLLLLDLLLLFLLLLFDLLLLLFLLLLLFFFCADLLLLMLLLLLRRAAFRFFDAFMMFMDLLLLLMLMLLLM","n":["batch","clear_bss","console","lang_items","logging","print","println","rust_main","sbi","sync","syscall","trap","APP_BASE_ADDRESS","APP_MANAGER","APP_SIZE_LIMIT","AppManager","KERNEL_STACK","KERNEL_STACK_SIZE","KernelStack","MAX_APP_NUM","USER_STACK","USER_STACK_SIZE","UserStack","__private_field","app_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_app","data","data","deref","from","from","from","from","get_current_app","get_sp","get_sp","init","into","into","into","into","load_app","move_to_next_app","num_app","print_app_info","print_app_info","push_context","run_next_app","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","console_getchar","console_putchar","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_WRITE","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","TrapContext","context","init","sepc","sstatus","trap_handler","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","sepc","set_sp","sstatus","try_from","try_into","type_id","x"],"q":[[0,"os"],[12,"os::batch"],[68,"os::console"],[78,"os::lang_items"],[79,"os::logging"],[91,"os::sbi"],[94,"os::sync"],[96,"os::sync::up"],[107,"os::syscall"],[112,"os::syscall::fs"],[114,"os::syscall::process"],[115,"os::trap"],[122,"os::trap::context"],[135,"core::result"],[136,"core::any"],[137,"core::fmt"],[138,"core::fmt"],[139,"log"],[140,"log"]],"d":["batch subsystem","clear BSS segment","SBI console driver, for text output","The panic handler","","print string macro","println string macro","the rust entry-point of os","SBI call wrappers","Synchronization and interior mutability primitives","Implementation of syscalls","Trap handling functionality","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","init batch subsystem","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","print apps info","","","run next app","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","use sbi call to getchar from console (qemu uart handler)","use sbi call to putchar in console (qemu uart handler)","use sbi call to shutdown the kernel","","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Exclusive access inner data in UPSafeCell. Panic if the …","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","","","File and filesystem-related syscalls","App management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","write buf of length <code>len</code>  to a file with <code>fd</code>","task exits and submit an exit code","Trap Context","","initialize CSR <code>stvec</code> as the entry of <code>__alltraps</code>","CSR sepc","CSR sstatus      ","handle an interrupt, exception, or system call from user …","general regs[0..31]","Trap Context","init app context","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","CSR sepc","set stack pointer to x_2 reg (sp)","CSR sstatus      ","","","","general regs[0..31]"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,7,8,4,3,7,8,4,3,4,7,8,3,7,8,4,3,4,7,8,0,7,8,4,3,4,4,4,0,4,7,0,7,8,4,3,7,8,4,3,7,8,4,3,0,13,13,13,13,0,13,13,13,13,0,0,17,17,17,17,17,0,17,17,17,17,17,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,0,9,9,9,9,9,9,9,9,9,9,9,9],"f":[0,[[],1],0,0,0,0,0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[3,[[5,[4]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,6],[7,6],[8,6],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,6],1],[4,1],0,[[],1],[4,1],[[7,9],9],[[],2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[12,1],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[13,14],15],[16,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[17,18],19],[17,1],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[17,20],1],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[],6],[6,1],[19,2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],[[21,[-1]]],[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[5,[-1]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,0,0,0,[[6,[22,[6]]],23],0,[[6,24,6],23],[25,2],0,0,[[],1],0,0,[9,9],0,0,[[6,6],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,[[9,6],1],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0],"c":[],"p":[[15,"tuple"],[15,"never"],[3,"APP_MANAGER",12],[3,"AppManager",12],[3,"UPSafeCell",96],[15,"usize"],[3,"KernelStack",12],[3,"UserStack",12],[3,"TrapContext",122],[4,"Result",135],[3,"TypeId",136],[3,"Arguments",137],[3,"Stdout",68],[15,"str"],[6,"Result",137],[3,"PanicInfo",138],[3,"SimpleLogger",79],[3,"Metadata",139],[15,"bool"],[3,"Record",139],[3,"RefMut",140],[15,"array"],[15,"isize"],[15,"u8"],[15,"i32"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
